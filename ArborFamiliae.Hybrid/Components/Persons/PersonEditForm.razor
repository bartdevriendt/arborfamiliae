@using ArborFamiliae.Domain.Person
@using ArborFamiliae.Hybrid.Components.Events
@inject GenderService GenderService


<EditForm Model="@Model" Context="edit_context">
    <DxFormLayout>
        <DxFormLayoutGroup Caption="@Loc["Preferred"]">
            <DxFormLayoutItem ColSpanLg="4" ColSpanMd="4" Caption="@Loc["Title"]"><DxTextBox @bind-Text="@Model.PreferredTitle"></DxTextBox></DxFormLayoutItem>    
            <DxFormLayoutItem ColSpanLg="4" ColSpanMd="4" Caption="@Loc["Nick"]"><DxTextBox @bind-Text="@Model.PreferredNick"></DxTextBox></DxFormLayoutItem>    
            <DxFormLayoutItem ColSpanLg="4" ColSpanMd="4" Caption="@Loc["Call"]"><DxTextBox @bind-Text="@Model.PreferredCall"></DxTextBox></DxFormLayoutItem>    
            <DxFormLayoutItem ColSpanLg="8" ColSpanMd="8" Caption="@Loc["Given"]"><DxTextBox @bind-Text="@Model.PreferredGivenName"></DxTextBox></DxFormLayoutItem>    
            <DxFormLayoutItem ColSpanLg="4" ColSpanMd="4" Caption="@Loc["Suffix"]"><DxTextBox @bind-Text="@Model.PreferredSuffix"></DxTextBox></DxFormLayoutItem>    
            <DxFormLayoutItem ColSpanLg="4" ColSpanMd="4" Caption="@Loc["Surname"]">
                <DxTextBox @bind-Text="@Model.PreferredSurnamePrefix" NullText="@Loc["prefix"]"></DxTextBox></DxFormLayoutItem>    
            <DxFormLayoutItem ColSpanLg="4" ColSpanMd="4" Caption="">
                <DxTextBox @bind-Text="@Model.PreferredSurname"></DxTextBox>
            </DxFormLayoutItem>    
        </DxFormLayoutGroup>
        <DxFormLayoutGroup Caption="@Loc["General"]">
            <DxFormLayoutItem Caption="@Loc["Gender"]" ColSpanLg="4" ColSpanMd="4">
                <DxComboBox Data="_genders" TData="GenderModel" TValue="Guid" @bind-Value="@Model.Gender" Text="@Loc["Select Gender"]" ValueFieldName="Id" TextFieldName="Description"></DxComboBox>
            </DxFormLayoutItem>
            <DxFormLayoutItem Caption="ID" ColSpanLg="4" ColSpanMd="4">
                <DxTextBox @bind-Text="@Model.ArborId"></DxTextBox>
            </DxFormLayoutItem>
        </DxFormLayoutGroup>
        @if (IsEdit)
        {
            <DxFormLayoutTabPages>
                <DxFormLayoutTabPage Caption="@Loc["Events"]">
                    <NestedEventList PersonId="Model.Id"></NestedEventList>
                </DxFormLayoutTabPage>
            </DxFormLayoutTabPages>
        }
    </DxFormLayout>

    <DxButton SubmitFormOnClick="true" Text="@Loc["Save"]" RenderStyle="ButtonRenderStyle.Primary" Click="OnSave"></DxButton>
</EditForm>

@code {

    [Parameter]
    public PersonAddEditModel Model { get; set; }

    [Parameter]
    public EventCallback PersonSave { get; set; }

    
    public bool IsEdit
    {
        get => Model.Id != Guid.Empty;
    }
    
    private List<GenderModel> _genders;

    protected override async Task OnInitializedAsync()
    {
        _genders = await GenderService.GetGenders();
    }

    private async Task OnSave()
    {
        await PersonSave.InvokeAsync();
    }

}