@using ArborFamiliae.Domain.Events
@using ArborFamiliae.Domain.Enums
@using SelectionMode = Syncfusion.Blazor.Grids.SelectionMode
@using SelectionType = Syncfusion.Blazor.Grids.SelectionType
@inject PersonEventService PersonEventService


<TwoRowLayout>
    <Row1>
        <SfToolbar>
            <ToolbarItems>
                <ToolbarItem Text="@Loc["Add"]" PrefixIcon="bi bi-plus-lg" OnClick="AddNewEvent"></ToolbarItem>
            </ToolbarItems>
        </SfToolbar>
    </Row1>
    <Row2>
        <SfGrid DataSource="_events" AllowGrouping="true">
            <GridSelectionSettings Mode="SelectionMode.Row" Type="SelectionType.Single"></GridSelectionSettings>
            <GridGroupSettings Columns="@_groupColumns"></GridGroupSettings>
            <GridColumns>
                <GridColumn Field="Category" HeaderText="@Loc["Category"]" AllowGrouping="true"></GridColumn>
                <GridColumn Field="Type" HeaderText="@Loc["Type"]"></GridColumn>
                <GridColumn Field="Description" HeaderText="@Loc["Description"]"></GridColumn>
                <GridColumn Field="Date" HeaderText="@Loc["Date"]"></GridColumn>
                <GridColumn Field="Place" HeaderText="@Loc["Place"]"></GridColumn>
                <GridColumn Field="Participant" HeaderText="@Loc["Main Participants"]"></GridColumn>
                <GridColumn Field="Role" HeaderText="@Loc["Role"]"></GridColumn>
                <GridColumn Field="ArborId" HeaderText="@Loc["ID"]"></GridColumn>
                <GridColumn Field="Age" HeaderText="@Loc["Age"]"></GridColumn>
            </GridColumns>
        </SfGrid>
    </Row2>
</TwoRowLayout>

<SfDialog IsModal="true" @bind-Visible="@PopupVisible">
    <DialogTemplates>
        <Header>@Loc["Add Event"]</Header>
        <Content>
            <EventInput Model="_addEditModel" EventSave="OnEventSave"></EventInput>
        </Content>
    </DialogTemplates>
</SfDialog>


@code {
    [Parameter]
    public Guid PersonId { get; set; }

    private List<EventAddEditModel> _events = new();
    private EventAddEditModel _addEditModel = new();

    private string[] _groupColumns = new[] { "Category" };
    
    bool PopupVisible { get; set; } = false;
    
    private object SelectedEvent { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        await LoadEvents();
    }

    private async Task LoadEvents()
    {
        _events = await PersonEventService.GetEventsForPerson(PersonId);
    }
    
    private void AddNewEvent()
    {
        _addEditModel.Role = EventRole.PRIMARY;
        
        PopupVisible = true;
    }

    private async Task OnEventSave()
    {
        _addEditModel = await PersonEventService.AddEditEventForPerson(PersonId, _addEditModel);
        PopupVisible = false;
        await LoadEvents();
        
        
    }

    private async Task RowDoubleClick()
    {

        _addEditModel = await PersonEventService.GetEventById(((EventListModel)SelectedEvent).Id);
        PopupVisible = true;
    }

}