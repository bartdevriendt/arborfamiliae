@using ArborFamiliae.Services.Common
@using ArborFamiliae.Domain.Enums
@using ArborFamiliae.Domain.Events
@inject EnumService EnumService

<div class="container-fluid">
    <EditForm Model="@Model" Context="edit_form">
        <TwoRowLayout>
            <Row1>
                <AFFormLayout>
                    <AFFormLayoutGroup Caption="@Loc["Event Information"]">
                        <AFFormLayoutItem Caption="@Loc["Event Type"]">
                            <SfComboBox DataSource="_eventTypes" TItem="EnumListType<EventType>" TValue="EventType" @bind-Value="@Model.Type">
                                <ComboBoxFieldSettings Text="Description" Value="Value"></ComboBoxFieldSettings>
                            </SfComboBox>
                        </AFFormLayoutItem>
                        <AFFormLayoutItem Caption="@Loc["Date"]">
                            <ArborDateInput @bind-Date="@Model.Date"></ArborDateInput>
                        </AFFormLayoutItem>
                        <AFFormLayoutItem Caption="@Loc["ID"]">
                            <SfTextBox @bind-Value="@Model.ArborId"></SfTextBox>
                        </AFFormLayoutItem>
                        <AFFormLayoutItem Caption="@Loc["Place"]">
                            <PlaceSelector @bind-PlaceId="@Model.PlaceId" @bind-Text="@Model.PlaceName" AllowAdd="true"></PlaceSelector>
                        </AFFormLayoutItem>
                        <AFFormLayoutItem Caption="@Loc["Description"]">
                            <SfTextBox @bind-Value="@Model.Description"></SfTextBox>
                        </AFFormLayoutItem>
                    </AFFormLayoutGroup>
                </AFFormLayout>
            </Row1>
            <Row2>
                <SfButton IsPrimary="true" @onclick="OnSave">@Loc["Save"]</SfButton>
            </Row2>
        </TwoRowLayout>
    </EditForm>
</div>

@code {
    
    [Parameter]
    public EventAddEditModel Model { get; set; }
    
    [Parameter]
    public EventCallback EventSave { get; set; }
    
    private string Date { get; set; }

    private List<EnumListType<EventType>> _eventTypes; 

    protected override async Task OnInitializedAsync()
    {
        _eventTypes = EnumService.GetEnumTypes<EventType>();
    }

    private async Task OnSave()
    {
        await EventSave.InvokeAsync();
    }

}