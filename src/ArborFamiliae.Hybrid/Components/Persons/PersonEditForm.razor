@using ArborFamiliae.Domain.Person
@using ArborFamiliae.Hybrid.Components.Events
@using ArborFamiliae.Domain.Events
@inject GenderService GenderService


<EditForm Model="@Model" Context="edit_context">
    <TwoRowLayout>
        <Row1>
            <AFFormLayout>
                <AFFormLayoutGroup Caption="@Loc["Preferred"]">
                    <AFFormLayoutItem ColSpanMd="4" Caption="@Loc["Title"]"><SfTextBox @bind-Value="@Model.PreferredTitle"></SfTextBox></AFFormLayoutItem>
                    <AFFormLayoutItem ColSpanMd="4" Caption="@Loc["Nick"]"><SfTextBox @bind-Value="@Model.PreferredNick"></SfTextBox></AFFormLayoutItem>
                    <AFFormLayoutItem ColSpanMd="4" Caption="@Loc["Call"]"><SfTextBox @bind-Value="@Model.PreferredCall"></SfTextBox></AFFormLayoutItem>
                    <AFFormLayoutItem ColSpanMd="8" Caption="@Loc["Given"]"><SfTextBox @bind-Value="@Model.PreferredGivenName"></SfTextBox></AFFormLayoutItem>
                    <AFFormLayoutItem ColSpanMd="4" Caption="@Loc["Suffix"]"><SfTextBox @bind-Value="@Model.PreferredSuffix"></SfTextBox></AFFormLayoutItem>
                    <AFFormLayoutItem ColSpanMd="4" Caption="@Loc["Surname"]">
                        <SfTextBox @bind-Value="@Model.PreferredSurnamePrefix" Placeholder="@Loc["prefix"]"></SfTextBox></AFFormLayoutItem>
                    <AFFormLayoutItem ColSpanMd="4" Caption="&nbsp;">
                        <SfTextBox @bind-Value="@Model.PreferredSurname"></SfTextBox>
                    </AFFormLayoutItem>
                </AFFormLayoutGroup>
                <AFFormLayoutGroup Caption="@Loc["General"]">
                    <AFFormLayoutItem Caption="@Loc["Gender"]" ColSpanMd="4">
                        <SfComboBox DataSource="_genders" TItem="GenderModel" TValue="Guid" @bind-Value="@Model.Gender" Placeholder="@Loc["Select Gender"]">
                            <ComboBoxFieldSettings Text="Description" Value="Id"></ComboBoxFieldSettings>
                        </SfComboBox>
                    </AFFormLayoutItem>
                    <AFFormLayoutItem Caption="ID" ColSpanMd="4">
                        <SfTextBox @bind-Value="@Model.ArborId"></SfTextBox>
                    </AFFormLayoutItem>
                </AFFormLayoutGroup>
                @if (IsEdit)
                {
                    <SfTab>
                        <TabItems>
                            <TabItem>
                                <ChildContent>
                                    <TabHeader Text="@Loc["Events"]"></TabHeader>
                                </ChildContent>
                                <ContentTemplate>
                                    <NestedEventList @bind-Events="Model.Events" EventMode="NestedEventList.EventListMode.Person" EventDeleted="OnEventDeleted"></NestedEventList>    
                                </ContentTemplate>
                            </TabItem>
                        </TabItems>
                    </SfTab>
                }
            </AFFormLayout>
            
        </Row1>
        <Row2><SfButton IsPrimary="true" @onclick="OnSave">@Loc["Save"]</SfButton></Row2>
    </TwoRowLayout>
    

    
</EditForm>

@code {

    [Parameter]
    public PersonAddEditModel Model { get; set; } = new PersonAddEditModel();

    [Parameter]
    public EventCallback PersonSave { get; set; }

    
    public bool IsEdit
    {
        get => Model.Id != Guid.Empty;
    }
    
    private List<GenderModel> _genders;

    protected override async Task OnInitializedAsync()
    {
        _genders = await GenderService.GetGenders();
    }

    private async Task OnSave()
    {
        await PersonSave.InvokeAsync();
    }

    private async Task OnEventDeleted(EventAddEditModel model)
    {
        Model.DeletedEvents.Add(model);
        Model.Events.Remove(model);
    }
}